ARG BASE_IMAGE=amazonlinux:2023

FROM ${BASE_IMAGE} AS initial

ARG ARCH=amd64
ARG RUNNER_VERSION=2.322.0
ARG RUNNER_USER_UID=1001

RUN dnf update -y \
    && dnf install -y \
    systemd \
    ca-certificates \
    dbus \
    iptables \
    iproute \
    kmod \
    glibc-langpack-en \
    sudo \
    git \
    vim \
    nano \
    openssh-server \
    gcc \
    gcc-c++ \
    make \
    htop \
    bind-utils \
    net-tools \
    less \
    wget \
    zip \
    unzip \
    udev \
    jq \
    tar \
    e2fsprogs \
    && dnf swap -y curl-minimal curl

# Install Docker
RUN dnf install -y docker \
    && systemctl enable docker

# Install latest git-lfs
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash && \
    dnf install -y git-lfs

RUN adduser --uid $RUNNER_USER_UID runner \
    && usermod -aG wheel runner \
    && echo "%wheel   ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers

# Create docker group and add runner user to it
RUN groupadd docker || true \
    && usermod -aG docker runner

# Enable SSH service
RUN systemctl enable sshd

RUN echo "runner:runner" | chpasswd

ENV HOME=/home/runner
ENV RUNNER_ASSETS_DIR=/runner

RUN mkdir -p "${RUNNER_ASSETS_DIR}" && chown -R runner:runner "${RUNNER_ASSETS_DIR}"

USER runner
RUN if [ "$ARCH" = "amd64" ] || [ "$ARCH" = "x86_64" ] || [ "$ARCH" = "i386" ]; then export ARCH=x64 ; fi \
    && cd "$RUNNER_ASSETS_DIR" \
    && umask 000 \
    && curl -fLo runner.tar.gz https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-${ARCH}-${RUNNER_VERSION}.tar.gz \
    && tar xzf ./runner.tar.gz \
    && rm runner.tar.gz \
    # instead of `sudo ./bin/installdependencies.sh` since it cant determine OS
    && sudo dnf install -y lttng-ust openssl-libs krb5-libs zlib libicu \
    && sudo dnf install -y libyaml-devel

RUN cd "${RUNNER_ASSETS_DIR}" \
    && curl -f -L -o runner-container-hooks.zip https://github.com/actions/runner-container-hooks/releases/download/v0.6.2/actions-runner-hooks-k8s-0.6.2.zip \
    && unzip ./runner-container-hooks.zip -d ./k8s \
    && rm runner-container-hooks.zip

ENV RUNNER_TOOL_CACHE=/opt/hostedtoolcache
RUN sudo mkdir -p /opt/hostedtoolcache \
    && sudo chown -R runner:runner /opt/hostedtoolcache \
    && sudo chmod -R g+rwx /opt/hostedtoolcache

USER root

COPY github-runner.service /etc/systemd/system/github-runner.service

RUN systemctl enable github-runner

RUN systemctl mask systemd-modules-load.service \
    systemd-resolved.service

ARG CACHEBUST
RUN echo ${CACHEBUST}
ENV CACHEBUST=${CACHEBUST}

ARG DZ_TAR=dz.tar.gz
RUN wget -O ${DZ_TAR} https://get.devzero.io/stable/linux-${ARCH}/dz.tar.gz \
    && tar -xzf ${DZ_TAR} \
    && rm -rf ${DZ_TAR} \
    && mv dzcmd /usr/bin
RUN chmod +x /usr/bin/dzcmd
RUN ln -s /usr/bin/dzcmd /usr/bin/dzboot

STOPSIGNAL SIGRTMIN+3
ENV DZBOOT_SKIP_PERSIST="1"
